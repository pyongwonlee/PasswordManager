@model PasswordManager.Models.MovieIndexViewModel

<div id="movieList" class="movieList">
    <div class="text-right text-warning">
        @Model.Movies.GetMetaData().TotalItemCount Movies
    </div>
    <table class="table table-striped movie-table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Title", "Index", new { directorId = Model.SelectedDirectorId, sortKey = Model.TitleSort, page = 1 }, new { @class = "btn btn-link" })
                    @if (Model.IsTitleSortUp)
                    {
                        <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    }
                    else if (Model.IsTitleSortDown)
                    {
                        <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                    }
                </th>
                <th>
                    @Html.ActionLink("Director", "Index", new { directorId = Model.SelectedDirectorId, sortKey = Model.DirectorSort, page = 1 }, new { @class = "btn btn-link" })
                    @if (Model.IsDirectorSortUp)
                    {
                        <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    }
                    else if (Model.IsDirectorSortDown)
                    {
                        <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                    }
                </th>
                <th>
                    @Html.ActionLink("Year", "Index", new { directorId = Model.SelectedDirectorId, sortKey = Model.YearSort, page = 1 }, new { @class = "btn btn-link" })
                    @if (Model.IsYearSortUp)
                    {
                        <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    }
                    else if (Model.IsYearSortDown)
                    {
                        <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                    }
                </th>
                <th>
                    @Html.ActionLink("Tomatometer", "Index", new { directorId = Model.SelectedDirectorId, sortKey = Model.TomatoSort, page = 1 }, new { @class = "btn btn-link" })
                    @if (Model.IsTomatoSortUp)
                    {
                        <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    }
                    else if (Model.IsTomatoSortDown)
                    {
                        <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                    }
                </th>
                <th>
                    @Html.ActionLink("IMDB Rating", "Index", new { directorId = Model.SelectedDirectorId, sortKey = Model.IMDBSort, page = 1 }, new { @class = "btn btn-link" })
                    @if (Model.IsIMDBSortUp)
                    {
                        <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    }
                    else if (Model.IsIMDBSortDown)
                    {
                        <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                    }
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Movies)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Director.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tomatometer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IMDBRating)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>

    </table>

    <div class="row">
        @Html.PagedListPager(Model.Movies, page => Url.Action("Index", new { directorId = Model.SelectedDirectorId, page }),
        PagedListRenderOptions.Classic)
    </div>
</div>
